import "./globals.css";
import { Inter } from "next/font/google";
import clsx from "clsx";
import { ThemeProvider } from "@/components/theme-provider";
import { ThemeToggle } from "@/components/theme-toggle";
import { Separator } from "@/components/ui/separator";
import Collection from "@/components/collection";
import { Skeleton } from "@/components/ui/skeleton";
import prisma from "@/lib/prisma";
import { Collection as CollectionModel } from "@prisma/client";
import { CreateCollectionForm } from "@/components/create-collection-form";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function Collections({
  parentId,
}: {
  parentId: CollectionModel["parentId"];
}) {
  const collections = await prisma.collection.findMany();

  return (
    <>
      {collections.length > 0 ? (
        <ul className="mt-4 flex flex-col space-y-2">
          <Collection
            collection={{ type: "home" }}
            isSelected={parentId === null}
          />
          {collections.map((c) => (
            <Collection
              key={`collection-${c.id}`}
              collection={{ type: "non-home", collection: c }}
              isSelected={c.id === parentId}
            />
          ))}
        </ul>
      ) : (
        <h2>There&apos;s nothing here!</h2>
      )}
    </>
  );
}

function CollectionsSkeleton() {
  return (
    <div className="mt-4 flex flex-col space-y-2">
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
      <div className="flex h-10 w-full items-center justify-center">
        <Skeleton className="h-8 w-full" />
      </div>
    </div>
  );
}

export default function RootLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { id: string };
}) {
  const parentId = Number(params.id);
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={clsx(
          inter.className,
          "flex h-screen w-screen items-center justify-center dark:bg-neutral-950"
        )}
      >
        <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
          <main className="h-full w-full">
            <div className="container flex max-w-7xl flex-col items-start justify-between space-y-2 py-4 sm:flex-row sm:items-center sm:space-y-0 md:h-16">
              <h2 className="text-lg font-semibold">linkr</h2>
              <div className="ml-auto flex w-full space-x-2 sm:justify-end">
                <ThemeToggle />
              </div>
            </div>
            <Separator />
            <div className="mx-auto grid h-full w-full max-w-7xl grid-cols-4 gap-8 p-8">
              <div className="col-span-1">
                <CreateCollectionForm />
                <Collections parentId={parentId} />
              </div>
              {children}
            </div>
          </main>
        </ThemeProvider>
      </body>
    </html>
  );
}
